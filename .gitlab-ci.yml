# This file is a template, and might need editing before it works on your project.
---
# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
#
# This template will build and test your projects as well as create the documentation.
#
# * Caches downloaded dependencies and plugins between invocation.
# * Does only verify merge requests but deploy built artifacts of the
#   master branch.
# * Shows how to use multiple jobs in test stage for verifying functionality
#   with multiple JDKs.
# * Uses site:stage to collect the documentation for multi-module projects.
# * Publishes the documentation for `master` branch.

variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd`are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_REF_NAME"'
image: maven:3-jdk-8
stages:
  - buildstage1
  - buildstage2
  - buildstage3
cache:
  paths:
    - .m2/repository
  key: "isyfactstandards"

#Buildstage1
build:masterpom:
  stage: buildstage1
  artifacts:
   paths:
   - "*/target/*"
   expire_in: 30 mins
  script:
    - 'mvn -pl isyfact-masterpom,isyfact-masterpom-lib $MAVEN_CLI_OPTS test-compile'



#Buildstage2
.template: &build2
  stage: buildstage2
  dependencies:
   - build:masterpom
  artifacts:
   paths:
   - "*/target/*"
   expire_in: 30 mins

build:productsbom:
  <<: *build2
  script:
    - 'mvn -pl isyfact-products-bom $MAVEN_CLI_OPTS test-compile'

build:serviceapisst:
  <<: *build2
  script:
    - 'mvn -pl isy-serviceapi-sst $MAVEN_CLI_OPTS test-compile'

build:datetime:
  <<: *build2
  script:
    - 'mvn -pl isy-datetime $MAVEN_CLI_OPTS test-compile'



#buildstage3
.template: &build3
  stage: buildstage3
  dependencies:
   - build:productsbom
   - build:serviceapisst
   - build:datetime
  artifacts:
   paths:
   - "*/target/*"
   expire_in: 30 mins

build:aufrufkontext:
  <<: *build3
  script:
    - 'mvn -pl isy-aufrufkontext $MAVEN_CLI_OPTS test-compile'
  

build:batchrahmen:
  <<: *build3
  script:
    - 'mvn -pl isy-batchrahmen $MAVEN_CLI_OPTS test-compile'

build:exceptioncore:
  <<: *build3
  script:
    - 'mvn -pl isy-exception-core $MAVEN_CLI_OPTS test-compile'

build:konfiguration:
  <<: *build3
  script:
    - 'mvn -pl isy-konfiguration $MAVEN_CLI_OPTS test-compile'

build:logging:
  <<: *build3
  script:
    - 'mvn -pl isy-logging $MAVEN_CLI_OPTS test-compile'

build:persistence:
  <<: *build3
  script:
    - 'mvn -pl isy-persistence $MAVEN_CLI_OPTS test-compile'

build:polling:
  <<: *build3
  script:
    - 'mvn -pl isy-polling $MAVEN_CLI_OPTS test-compile'

build:serviceapicore:
  <<: *build3
  script:
    - 'mvn -pl isy-serviceapi-core $MAVEN_CLI_OPTS test-compile'

build:sicherheit:
  <<: *build3
  script:
    - 'mvn -pl isy-sicherheit $MAVEN_CLI_OPTS test-compile'

build:task:
  <<: *build3
  script:
    - 'mvn -pl isy-task $MAVEN_CLI_OPTS test-compile'

build:util:
  <<: *build3
  script:
    - 'mvn -pl isy-util $MAVEN_CLI_OPTS test-compile'

build:sonderzeichen:
  <<: *build3
  script:
    - 'mvn -pl isy-sonderzeichen $MAVEN_CLI_OPTS test-compile'


#buildstage4
build:ueberwachung:
  stage: buildstage4
  dependencies:
   - build:task
  artifacts:
   paths:
   - "*/target/*"
   expire_in: 30 mins
