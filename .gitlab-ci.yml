# This file is a template, and might need editing before it works on your project.
---
# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
#
# This template will build and test your projects as well as create the documentation.
#
# * Caches downloaded dependencies and plugins between invocation.
# * Does only verify merge requests but deploy built artifacts of the
#   master branch.
# * Shows how to use multiple jobs in test stage for verifying functionality
#   with multiple JDKs.
# * Uses site:stage to collect the documentation for multi-module projects.
# * Publishes the documentation for `master` branch.

variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd`are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_REF_NAME"'
image: $BUILDIMAGE
stages:
  - buildstage
  - teststage
  - packagestage
  - deploystage
  - testerwstage
cache:
  paths:
    - .m2/repository
  key: "isyfactstandards"

#Buildstage
build:isyfactstandards:
  stage: buildstage
  artifacts:
   paths:
   - "*/target/*"
   expire_in: 30 mins
  before_script:
   - rm -rf .m2/repository/de
  script:
   - ' mvn $MAVEN_CLI_OPTS test-compile'

#Teststage
test:isyfactstandards:
  stage: teststage
  dependencies:
   - build:isyfactstandards
  artifacts:
   paths:
   - "*/target/*"
   expire_in: 30 mins
  before_script:
   - ' echo "127.0.0.1 $HOSTNAME" >> /etc/hosts'
  script:
   - ' mvn $MAVEN_CLI_OPTS test'

package:isyfactstandards:
  stage: packagestage
  dependencies:
   - test:isyfactstandards
  artifacts:
   paths:
   - "*/target/*"
   expire_in: 30 mins
  script:
   - 'mvn -DskipTests $MAVEN_CLI_OPTS package'

deploy:isyfactstandards:
  stage: deploystage
  cache:
    paths:
      - .m2/repository
    key: "isyfactstandards"
    policy: pull
  dependencies:
   - package:isyfactstandards
  script:
   - ' mvn -DskipTests -Dmaven.install.skip=true -Dmaven.javadoc.skip=true $MAVEN_CLI_OPTS deploy'
