<?xml version="1.0" encoding="UTF-8"?>
<!--

    See the NOTICE file distributed with this work for additional
    information regarding copyright ownership.
    The Federal Office of Administration (Bundesverwaltungsamt, BVA)
    licenses this file to you under the Apache License, Version 2.0 (the
    License). You may not use this file except in compliance with the
    License. You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    implied. See the License for the specific language governing
    permissions and limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
                           http://www.springframework.org/schema/aop 
                           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    
    <!--
        =====================================================================================================
        Dies ist die Spring-Konfigurationsdatei für die Komponente Polling. 
        
        =====================================================================================================
    -->

    <!-- Polling-Verwalter -->
    <bean id="pollingVerwalter" class="de.bund.bva.pliscommon.polling.impl.PollingVerwalterImpl">
        <property name="konfiguration" ref="konfiguration" />
    </bean>  

    <!-- ======================================================================
        Diese Bean erzeugt einen MBean-Exporter. Der MBeanExporter stellt die
        in der Property "Beans" angegebenen Spring-Beans als MBeans bereit.
        D.h. diese Beans sind dann ueber JMX sichtbar.
        Der MBeanExporter nutzt die als "assembler" angegebene Bean um alle
        Informationen fuer das Management-Interface der zu exportierenden
        MBeans zu ermitteln.
        ====================================================================== -->
    <bean id="mBeanExporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
        <property name="assembler">
            <bean class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
                <property name="attributeSource">
                    <bean class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />
                </property>
            </bean>
        </property>
        <property name="autodetect" value="false" />
        <property name="beans">
            <map>
                <entry
                    key="de.bund.bva.pliscommon.polling:type=PollingStatus,name=&quot;Polling-Aktivitaet-${polling.cluster.CLUSTER1.name}&quot;"
                    value-ref="cluster1Monitor" />
                <entry
                    key="de.bund.bva.pliscommon.polling:type=PollingStatus,name=&quot;Polling-Aktivitaet-${polling.cluster.CLUSTER2.name}&quot;"
                    value-ref="cluster2Monitor" />
            </map>
        </property>
    </bean>

    <!-- ======================================================================
        Hier werden die MBeans als Spring-Beans konfiguriert. Der eigentliche
        Export als MBean erfolgt über den Eintrag in den Beans-Map des 
        MBeanExporters.
        ====================================================================== -->
    <bean id="cluster1Monitor" class="de.bund.bva.pliscommon.polling.PollingMBean"
        depends-on="mBeanExporter">
        <property name="pollingVerwalter" ref="pollingVerwalter" />
        <property name="clusterId" value="CLUSTER1" />
    </bean>
        
    <bean id="cluster2Monitor" class="de.bund.bva.pliscommon.polling.PollingMBean"
        depends-on="mBeanExporter" >
        <property name="pollingVerwalter" ref="pollingVerwalter" /> 
        <property name="clusterId" value="CLUSTER2" />
    </bean>


    <!-- Testklasse zum Ausführen einer Polling-Aktion -->
    <bean id="pollingAktionAusfuehrer" class="de.bund.bva.pliscommon.polling.test.PollingAktionAusfuehrer" />

    <!-- @PolligAktion Annotation einschalten -->
    <bean id="pollingAktionInterceptor" class="de.bund.bva.pliscommon.polling.annotation.PollingAktionInterceptor">
        <property name="pollingVerwalter" ref="pollingVerwalter" />
    </bean>

    <aop:config>
        <aop:pointcut id="pollingAktionPointcut"
            expression="@annotation(de.bund.bva.pliscommon.polling.annotation.PollingAktion) || @within(de.bund.bva.pliscommon.polling.annotation.PollingAktion)" />
        <aop:advisor pointcut-ref="pollingAktionPointcut" advice-ref="pollingAktionInterceptor" />
    </aop:config>
   
</beans>
 